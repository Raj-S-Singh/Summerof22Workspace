{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/app.tsx","webpack:///./src/main.tsx","webpack:///../../libs/configuration-box/src/index.ts","webpack:///../../libs/configuration-box/src/lib/configuration-box.tsx","webpack:///../../libs/navigationbar/src/index.ts","webpack:///../../libs/navigationbar/src/lib/navigationbar.tsx","webpack:///../../libs/navigationbar/src/lib/timer.tsx","webpack:///../../libs/test-application/src/index.ts","webpack:///../../libs/test-application/src/lib/result-card.tsx","webpack:///../../libs/test-application/src/lib/test-application.tsx","webpack:///./src/app/app.module.css?4ad6","webpack:///../../libs/configuration-box/src/lib/configuration-box.module.css?42d5","webpack:///../../libs/navigationbar/src/lib/timer.module.css?ade6","webpack:///../../libs/test-application/src/lib/result-card.module.css?0d7e","webpack:///../../libs/test-application/src/lib/test-application.module.css?fe8a"],"sourcesContent":["import { useState } from 'react';\nimport { ConfigurationBox } from '@final-summer-workspace/configuration-box';\nimport { Navigationbar } from '@final-summer-workspace/navigationbar';\nimport { TestApplication } from '@final-summer-workspace/test-application';\n\nimport styles from './app.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport function App() {\n    const [launchTest, setLaunchTest] = useState(false);\n\n    const [noOfOptions, setNoOfOptions] = useState(4);\n    const [noOfQuestions, setNoOfQuestions] = useState(30);\n    const [timerDuration, setTimerDuration] = useState(60);\n    const [showTimer, setShowTimer] = useState(false);\n\n    const [showResults, setShowResults] = useState(false);\n\n    return (\n        <>\n            <Navigationbar\n                timerDuration={timerDuration}\n                showTimer={showTimer}\n                onTimerExpire={() => {\n                    setShowTimer(false);\n                    setShowResults(true);\n                }}\n            ></Navigationbar>\n            {launchTest ? (\n                <TestApplication\n                    noOfOptions={noOfOptions}\n                    noOfQuestions={noOfQuestions}\n                    showResults={showResults}\n                />\n            ) : (\n                <div id={styles['main-container']}>\n                    <ConfigurationBox\n                        onConfigSubmit={(\n                            no_of_options,\n                            no_of_questions,\n                            timer_duration\n                        ) => {\n                            setNoOfOptions(no_of_options);\n                            setNoOfQuestions(no_of_questions);\n                            setTimerDuration(timer_duration);\n                            setShowTimer(true);\n                            setLaunchTest(true);\n                        }}\n                    ></ConfigurationBox>\n                </div>\n            )}\n\n            <footer id={styles['footer-container']}>\n                <p>\n                    Author: Raj Shree Singh <br />\n                    <a href=\"mailto:rssingh1999david@gmail.com\">\n                        Personal Email\n                    </a>\n                </p>\n            </footer>\n        </>\n    );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport * as ReactDOM from 'react-dom/client';\n\nimport App from './app/app';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n","export * from './lib/configuration-box';\n","import styles from './configuration-box.module.css';\nimport { Card, Button, Nav } from 'react-bootstrap';\nimport { useState } from 'react';\n\n/* eslint-disable-next-line */\nexport interface ConfigurationBoxProps {\n    onConfigSubmit: (\n        noOfOptions: number,\n        noOfQuestions: number,\n        timerDuartion: number\n    ) => void;\n}\n\nexport const ConfigurationBox = (props: ConfigurationBoxProps) => {\n    const [noOfQuestions, setNoOfQuestions] = useState(30);\n    const [noOfOptions, setNoOfOptions] = useState(4);\n    const [timerDuration, setTimerDuration] = useState(60);\n\n    return (\n        <>\n            <div id={styles['card-container']}>\n                <Card bg=\"light\" text=\"dark\">\n                    <Card.Header>\n                        <Nav variant=\"tabs\" defaultActiveKey=\"#first\">\n                            <Nav.Item>\n                                <Nav.Link href=\"#first\">Configure</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Card.Header>\n                    <Card.Body>\n                        <Card.Title>Configure your OMR</Card.Title>\n                        <Card.Text>\n                            <input\n                                type=\"number\"\n                                value={noOfQuestions}\n                                onChange={(e) =>\n                                    setNoOfQuestions(e.target.valueAsNumber)\n                                }\n                            />{' '}\n                            X{' '}\n                            <input\n                                type=\"number\"\n                                min={2}\n                                max={6}\n                                value={noOfOptions}\n                                onChange={(e) =>\n                                    setNoOfOptions(e.target.valueAsNumber)\n                                }\n                            />\n                            <br />\n                            <br />\n                            <b>Timer (in mins) :</b>{' '}\n                            <input\n                                type=\"number\"\n                                value={timerDuration}\n                                min={30}\n                                max={180}\n                                onChange={(e) =>\n                                    setTimerDuration(e.target.valueAsNumber)\n                                }\n                            />\n                        </Card.Text>\n                        <Button\n                            variant=\"dark\"\n                            onClick={() =>\n                                props.onConfigSubmit(\n                                    noOfOptions,\n                                    noOfQuestions,\n                                    timerDuration\n                                )\n                            }\n                        >\n                            Confirm\n                        </Button>\n                    </Card.Body>\n                </Card>\n            </div>\n        </>\n    );\n};\n\nexport default ConfigurationBox;\n","export * from './lib/navigationbar';\n","import { Navbar, Container, Nav } from 'react-bootstrap';\nimport { Timer } from './timer';\n\nexport interface NavigationbarProps {\n    timerDuration: number;\n    showTimer: boolean;\n    onTimerExpire: () => void;\n}\n\nexport const Navigationbar = (props: NavigationbarProps) => {\n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\n                        <Nav.Link href=\"#features\">Features</Nav.Link>\n                        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n                    </Nav>\n                </Container>\n                <Nav className=\"me-auto\">\n                    <Navbar.Text>\n                        <Timer\n                            isTimer={props.showTimer}\n                            timerDuration={props.timerDuration * 60}\n                            currentTime={new Date().valueOf()}\n                            onTimerExpire={props.onTimerExpire}\n                        />\n                    </Navbar.Text>\n                </Nav>\n            </Navbar>\n        </>\n    );\n};\n\nexport default Navigationbar;\n","import { useEffect, useState } from 'react';\nimport styles from './timer.module.css';\n\nexport interface TimerProps {\n    isTimer: boolean;\n    timerDuration?: number; // No of seconds for the timer\n    currentTime: number;\n    onTimerExpire: () => void;\n}\n\nconst options: Intl.DateTimeFormatOptions = {\n    weekday: 'long',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: true,\n};\n\nconst getTimeString = (date: Date): string => {\n    return date.toLocaleString('en-us', options);\n};\n\nconst getTimerString = (num: number, expiryCallback: () => void): string => {\n    if (num > 0) {\n        return `${Math.floor(num / 3600)} : ${Math.floor(\n            num / 60\n        )} : ${Math.floor(num % 60)}`;\n    }\n    expiryCallback();\n    return '00: 00 : 00';\n};\n\nexport const Timer = (timerProps: TimerProps) => {\n    // Yupp the entire function reruns itself. So look into the Optimizations using other hooks..\n    const startTime: number = timerProps.currentTime;\n    const [currentTimer, setCurrentTimer] = useState(new Date(startTime));\n\n    useEffect(() => {\n        const update = setInterval(() => setCurrentTimer(new Date()), 1000);\n        return () => clearInterval(update);\n    }, []);\n\n    return (\n        <>\n            <div className={styles['time-container']}>\n                {timerProps.isTimer\n                    ? getTimerString(\n                          (timerProps?.timerDuration ?? 3600) -\n                              (currentTimer.valueOf() - startTime) / 1000,\n                          timerProps.onTimerExpire\n                      )\n                    : getTimeString(currentTimer)}\n            </div>\n        </>\n    );\n};\n","export * from './lib/test-application';\n","import styles from './result-card.module.css';\n\nexport interface ResultCardProps {\n    answerSheet: number[];\n}\n\nexport const ResultCard = (props: ResultCardProps) => {\n    return (\n        <div className={styles['result-card']}>\n            <div className={styles['result-card-header']}>\n                View your answers\n            </div>\n            <div className={styles['result-card-entries']}>\n                {[...props.answerSheet].map((ans, index) => {\n                    if (index > 0) {\n                        return (\n                            <div>\n                                {`${index}. \\u2002`}\n                                <code>{`${ans ? ans : ''}`}</code>\n                            </div>\n                        );\n                    }\n                    return <></>;\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default ResultCard;\n","import { useState } from 'react';\nimport { Button, Form, Table, Toast, ToggleButton } from 'react-bootstrap';\nimport ResultCard from './result-card';\nimport styles from './test-application.module.css';\n\n/* eslint-disable-next-line */\nexport interface TestApplicationProps {\n    noOfQuestions: number;\n    noOfOptions: number;\n    showResults: boolean;\n}\n\nexport function TestApplication(props: TestApplicationProps) {\n    const navigatorRows: number = Math.ceil(props.noOfQuestions / 10);\n    const navigatorCols: number = 10;\n\n    const [currQuestion, setCurrQuestion] = useState(1);\n\n    const [answerSheet, setAnswerSheet]: [\n        number[],\n        React.Dispatch<React.SetStateAction<number[]>>\n    ] = useState(new Array(props.noOfQuestions + 1));\n\n    const [showConfirmation, setShowConfirmation] = useState(false);\n    const toggleShowConfirmation = () => setShowConfirmation(!showConfirmation);\n\n    return (\n        <div className={styles['container']}>\n            {props.showResults ? (\n                <ResultCard answerSheet={answerSheet} />\n            ) : (\n                <>\n                    <div className={styles['questions']}>\n                        <div id={styles['questions-header']}>\n                            Navigator Deck\n                        </div>\n                        <Table\n                            className={styles['navigator-deck']}\n                            size=\"sm\"\n                            variant=\"dark\"\n                        >\n                            <tbody>\n                                {[...Array(navigatorRows).keys()].map(\n                                    (rowNo) => (\n                                        <tr>\n                                            {[...Array(navigatorCols).keys()]\n                                                .map(\n                                                    (colNo) =>\n                                                        rowNo * 10 + colNo + 1\n                                                )\n                                                .filter(\n                                                    (index) =>\n                                                        index <=\n                                                        props.noOfQuestions\n                                                )\n                                                .map((index) => (\n                                                    <td>\n                                                        <ToggleButton\n                                                            variant=\"outline-light\"\n                                                            type=\"checkbox\"\n                                                            id={`button-${index}`}\n                                                            size=\"sm\"\n                                                            value={index}\n                                                            checked={\n                                                                currQuestion ==\n                                                                index\n                                                            }\n                                                            onChange={() => {\n                                                                setCurrQuestion(\n                                                                    index\n                                                                );\n                                                            }}\n                                                        >\n                                                            {index}\n                                                        </ToggleButton>\n                                                    </td>\n                                                ))}\n                                        </tr>\n                                    )\n                                )}\n                            </tbody>\n                        </Table>\n                    </div>\n                    <div className={styles['options']}>\n                        Choose the correct answer\n                        <Form>\n                            {[...Array(props.noOfOptions).keys()].map(\n                                (optionNo) => (\n                                    <Form.Check\n                                        type=\"checkbox\"\n                                        name=\"group-checkbox\"\n                                        id={`checkbox-${optionNo + 1}`}\n                                        label={`${optionNo + 1}`}\n                                        onClick={() => {\n                                            let newArr = [...answerSheet];\n                                            newArr[currQuestion] = optionNo + 1;\n                                            setAnswerSheet(newArr);\n                                        }}\n                                        checked={\n                                            answerSheet[currQuestion] ===\n                                            optionNo + 1\n                                        }\n                                    />\n                                )\n                            )}\n                            <Button\n                                id={styles['previous-button']}\n                                variant=\"outline-info\"\n                                onClick={() => {\n                                    toggleShowConfirmation();\n                                    setCurrQuestion(currQuestion - 1);\n                                }}\n                            >\n                                Previous\n                            </Button>\n                            <Button\n                                id={styles['next-button']}\n                                variant=\"outline-info\"\n                                onClick={() => {\n                                    toggleShowConfirmation();\n                                    setCurrQuestion(currQuestion + 1);\n                                }}\n                            >\n                                Next\n                            </Button>\n                        </Form>\n                        <Toast\n                            onClose={toggleShowConfirmation}\n                            show={showConfirmation}\n                            animation={true}\n                            delay={1000}\n                            bg=\"dark\"\n                            autohide\n                        >\n                            <Toast.Body\n                                className={styles['option-notification']}\n                            >\n                                Options saved !!\n                            </Toast.Body>\n                        </Toast>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default TestApplication;\n","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"app_main-container__2EJDa\",\"footer-container\":\"app_footer-container__3N89C\"};","// extracted by mini-css-extract-plugin\nexport default {\"card-container\":\"configuration-box_card-container__gvabs\"};","// extracted by mini-css-extract-plugin\nexport default {\"time-container\":\"timer_time-container__3pPBQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"result-card\":\"result-card_result-card__qGbcy\",\"result-card-header\":\"result-card_result-card-header__2o1Sj\",\"result-card-entries\":\"result-card_result-card-entries__NBRhL\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"test-application_container__3tqXp\",\"questions\":\"test-application_questions__1CNPB\",\"options\":\"test-application_options__TW0tj\",\"questions-header\":\"test-application_questions-header__2Tlgg\",\"navigator-deck\":\"test-application_navigator-deck__375wm\",\"previous-button\":\"test-application_previous-button__3iVII\",\"next-button\":\"test-application_next-button__3rtUJ\",\"option-notification\":\"test-application_option-notification__3SuvG\"};"],"names":["useState","ConfigurationBox","Navigationbar","TestApplication","styles","App","launchTest","setLaunchTest","noOfOptions","setNoOfOptions","noOfQuestions","setNoOfQuestions","timerDuration","setTimerDuration","showTimer","setShowTimer","showResults","setShowResults","no_of_options","no_of_questions","timer_duration","StrictMode","ReactDOM","root","createRoot","document","getElementById","render","Card","Button","Nav","props","e","target","valueAsNumber","onConfigSubmit","Navbar","Container","Timer","Date","valueOf","onTimerExpire","useEffect","options","weekday","month","day","hour","minute","second","hour12","getTimeString","date","toLocaleString","getTimerString","num","expiryCallback","Math","floor","timerProps","startTime","currentTime","currentTimer","setCurrentTimer","update","setInterval","clearInterval","isTimer","ResultCard","answerSheet","map","ans","index","Form","Table","Toast","ToggleButton","navigatorRows","ceil","navigatorCols","currQuestion","setCurrQuestion","setAnswerSheet","Array","showConfirmation","setShowConfirmation","toggleShowConfirmation","keys","rowNo","colNo","filter","optionNo","newArr"],"sourceRoot":""}